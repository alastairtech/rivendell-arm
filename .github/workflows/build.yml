name: Build Rivendell

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Build Rivendell
        run: |
          docker run --rm --privileged -v .:/mnt -w /mnt --platform linux/${{ matrix.architecture }} debian:12 /mnt/build_action.sh
      
      - name: Upload deb files
        uses: actions/upload-artifact@v4
        with:
          name: rivendell-deb-${{ matrix.architecture }}
          path: "rivendell_*.deb"

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Get release name
        id: get_release_name
        run: echo "::set-output name=release_name::$(cat artifacts/rivendell-deb-amd64/release_name.txt)"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_release_name.outputs.release_name }}
          release_name: Rivendell ${{ steps.get_release_name.outputs.release_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset (amd64)
        id: upload-release-asset-amd64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/rivendell-deb-amd64/rivendell_*.deb
          asset_name: rivendell_${{ steps.get_release_name.outputs.release_name }}_amd64.deb
          asset_content_type: application/vnd.debian.binary-package

      - name: Upload Release Asset (arm64)
        id: upload-release-asset-arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/rivendell-deb-arm64/rivendell_*.deb
          asset_name: rivendell_${{ steps.get_release_name.outputs.release_name }}_arm64.deb
          asset_content_type: application/vnd.debian.binary-package